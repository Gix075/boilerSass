/*
 *  ***************************************************
 *  boilerSASS
 *  ***************************************************
 *  Simple SASS Boilerplate based on HTML5 Boilerplate 
 *  ***************************************************
 *  FLEX GRID
*/
@use "sass:math";

// variables
$grid_column_sizes: 5 10 15 20 25 30 33.3333 35 40 45 50 55 60 65 70 75 80 85 90 95 100;
$grid_gutter: $padding_half;

@mixin flex_grid_columns($grid_column_sizes,$grid_gutter) {
    .flexgrid-item,
    .fgi {
        
        @if($grid_gutter == 0) {
            
            flex: 0 0 100%;
            max-width: 100%;

            @media all and (min-width: $bp_desktop_small) {
                @each $cs in $grid_column_sizes {
                    $size_class: floor($cs);

                    &.size-#{$size_class} {
                        flex: 0 0 percentage(math.div($cs, 100));
                        max-width: percentage(math.div($cs, 100))
                    }

                }
            }

        } // end @if

        @else {

            flex: 0 0 calc(100% - #{$grid_gutter});
            max-width: calc(100% - #{$grid_gutter});
            margin: 0 math.div($grid_gutter, 2) $grid_gutter;

            @media all and (min-width: $bp_desktop_small) {
                @each $cs in $grid_column_sizes {
                    $size_class: floor($cs);

                    &.size-#{$size_class} {
                        flex: 0 0 calc(#{$cs}% - #{$grid_gutter});
                        max-width: calc(#{$cs}% - #{$grid_gutter});
                    }
                }
            }

        } // end @else


    } // end .flexgrid-item


    @if($grid_gutter == 0) {

        @for $i from 2 through 5 {
            @media all and (min-width: $bp_desktop_small) {
                &.columns-#{$i} {
                    .flexgrid-item,
                    .fgi {
                        $perc: math.div(100, $i) *1%;
                        flex: 0 0 $perc;
                        max-width: $perc;
                    }
                }
            }
        }

    }// end @if

    @else {
        @for $i from 2 through 5 {
            @media all and (min-width: $bp_desktop_small) {
                &.columns-#{$i} {
                    .flexgrid-item,
                    .fgi {
                        $perc: math.div(100, $i) *1%;
                        flex: 0 0 calc(#{$perc} - #{$grid_gutter});
                        max-width: calc(#{$perc} - #{$grid_gutter});
                    }
                }
            }
        }
    } // end @else

}

// Main Grid (without gutter)
// *************************************
.flexgrid,
.fg {
    display: flex;
    flex-wrap: wrap;
    //margin: 0 -#{math.div($grid_gutter, 2)};

    &.justify-center,
    &.jc {
        justify-content: center;
    }

    &.align-center,
    &.ac {
        align-items: center;
    }

    @include flex_grid_columns($grid_column_sizes,0);

}


// Main Grid (gutter using margin)
// *************************************
.flexgrid.margined,
.fg.margined,
.flexgrid.with-gutter,
.fg.with-gutter,
.flexgrid.wg,
.fg.wg   {

    margin: 0 -#{math.div($grid_gutter, 2)};

    @include flex_grid_columns($grid_column_sizes,$grid_gutter);

    &.quarter-gutter,
    &.qg {
        $grid_gutter: math.div($grid_gutter, 4);
        margin: 0 -#{math.div($grid_gutter, 2)};
        @include flex_grid_columns($grid_column_sizes,$grid_gutter);
    }

    &.half-gutter,
    &.hg {
        $grid_gutter: math.div($grid_gutter, 2);
        margin: 0 -#{math.div($grid_gutter, 2)};
        @include flex_grid_columns($grid_column_sizes,$grid_gutter);
    }

    &.double-gutter,
    &.dg {
        $grid_gutter: $grid_gutter*2;
        margin: 0 -#{math.div($grid_gutter, 2)};
        @include flex_grid_columns($grid_column_sizes,$grid_gutter);
    }

}


// Main Grid (gutter using padding)
// *************************************
.flexgrid.padded,
.fg.padded {
    // Flexgrid Item
    // *************************************
    .flexgrid-item,
    .fgi {
        padding: $grid_gutter math.div($grid_gutter, 2);
    }
}
