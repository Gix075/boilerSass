/*
 *  ***************************************************
 *  boilerSASS
 *  ***************************************************
 *  Simple SASS Boilerplate based on HTML5 Boilerplate 
 *  ***************************************************

 *  CSS UTILITIES
*/

// Probably you can modify this style, simply editing the "_variables.scss" and "_mixins.scss" files

/*  ========================================================================== */
/*  Elements Positioning */
/*  ========================================================================== */
.relative {
    position: relative;
}
 
.absolute {
    position: absolute;
}
 
.fixed {
    position: fixed;
}


/*  ========================================================================== */
/*  Display */
/*  ========================================================================== */
.block {
    display: block;
}
 
.inline-block {
    display: inline-block;
}
 
.inline {
    display: inline;
}

/*  ========================================================================== */
/*  Margins */
/*  ========================================================================== */
 
// --> resets 
.no-marg {
    margin: 0!important;
}

.no-marg-ver {
    margin-top: 0!important;
    margin-bottom: 0!important;
}

.no-marg-hor {
    margin-left: 0!important;
    margin-right: 0!important;
}
 
// --> assignment
.marg {
    margin: $margin;
    &.half {
        margin: $marg_h;
    }
    &.quarter {
        margin: $marg_q;
    }
    &.double {
        margin: $margin*2;
    }
}

.marg-ver {
    margin-top: $margin;
    margin-bottom: $margin;
    &.half {
        margin-top: $marg_h;
        margin-bottom: $marg_h;
    }
    &.quarter {
        margin-top: $marg_q;
        margin-bottom: $marg_q;
    }
    &.double {
        margin-top: $margin*2;
        margin-bottom: $margin*2;
    }
}

.marg-hor {
    margin-left: $margin;
    margin-right: $margin;
    &.half {
        margin-left: $marg_h;
        margin-right: $marg_h;
    }
    &.quarter {
        margin-left: $marg_q;
        margin-right: $marg_q;
    }
    &.double {
        margin-left: $margin*2;
        margin-right: $margin*2;
    }
}

@each $pos in $positions {
    
    // --> selective resets 
    .no-marg-#{$pos} {
        margin-#{$pos}: 0!important;
    }
    
    // --> selective assignment 
    .marg-#{$pos} {
        margin-#{$pos}: $margin;
        &.half {
            margin-#{$pos}: $marg_h;
        }
        &.quarter {
            margin-#{$pos}: $marg_q;
        }
        &.double {
            margin-#{$pos}: $margin*2;
        }
    }
    
}
 
/*  ========================================================================== */ 
/*  Paddings */
/*  ========================================================================== */
// --> resets 
.no-pad {
    padding: 0!important;
}

.no-pad-ver {
    padding-top: 0!important;
    padding-bottom: 0!important;
}

.no-pad-hor {
    padding-left: 0!important;
    padding-right: 0!important;
}
 
// --> assignment
.pad {
    padding: $padding;
    &.half {
        padding: $pad_h;
    }
    &.quarter {
        padding: $pad_q;
    }
    &.double {
        padding: $padding*2;
    }
}

.pad-ver {
    padding-top: $padding;
    padding-bottom: $padding;
    &.half {
        padding-top: $pad_h;
        padding-bottom: $pad_h;
    }
    &.quarter {
        padding-top: $pad_q;
        padding-bottom: $pad_q;
    }
    &.double {
        padding-top: $padding*2;
        padding-bottom: $padding*2;
    }
}

.pad-hor {
    padding-left: $padding;
    padding-right: $padding;
    &.half {
        padding-left: $pad_h;
        padding-right: $pad_h;
    }
    &.quarter {
        padding-left: $pad_q;
        padding-right: $pad_q;
    }
    &.double {
        padding-left: $padding*2;
        padding-right: $padding*2;
    }
}



@each $pos in $positions {
    
    // --> selective resets 
    .no-pad-#{$pos} {
        padding-#{$pos}: 0!important;
    }
    
    // --> selective assignment 
    .pad-#{$pos} {
        padding-#{$pos}: $padding;
        &.half {
            padding-#{$pos}: $pad_h;
        }
        &.quarter {
            padding-#{$pos}: $pad_q;
        }
        &.double {
            padding-#{$pos}: $padding*2;
        }
    }
}


/* ############################################################################################ */

/* HTML5 BOILERLESS CLASSES */

/* ############################################################################################ */

/* ==========================================================================
   Helper classes
   ========================================================================== */


/*
 * Hide visually and from screen readers
 */

.hidden {
    display: none !important;
}


/*
 * Hide only visually, but have it available for screen readers:
 * https://snook.ca/archives/html_and_css/hiding-content-for-accessibility
 *
 * 1. For long content, line feeds are not interpreted as spaces and small width
 *    causes content to wrap 1 word per line:
 *    https://medium.com/@jessebeach/beware-smushed-off-screen-accessible-text-5952a4c2cbfe
 */

.visuallyhidden {
    border: 0;
    clip: rect(0 0 0 0);
    -webkit-clip-path: inset(50%);
    clip-path: inset(50%);
    height: 1px;
    margin: -1px;
    overflow: hidden;
    padding: 0;
    position: absolute;
    width: 1px;
    white-space: nowrap;
    /* 1 */
}


/*
 * Extends the .visuallyhidden class to allow the element
 * to be focusable when navigated to via the keyboard:
 * https://www.drupal.org/node/897638
 */

.visuallyhidden.focusable:active,
.visuallyhidden.focusable:focus {
    clip: auto;
    -webkit-clip-path: none;
    clip-path: none;
    height: auto;
    margin: 0;
    overflow: visible;
    position: static;
    width: auto;
    white-space: inherit;
}


/*
 * Hide visually and from screen readers, but maintain layout
 */

.invisible {
    visibility: hidden;
}


/*
 * Clearfix: contain floats
 *
 * For modern browsers
 * 1. The space content is one way to avoid an Opera bug when the
 *    `contenteditable` attribute is included anywhere else in the document.
 *    Otherwise it causes space to appear at the top and bottom of elements
 *    that receive the `clearfix` class.
 * 2. The use of `table` rather than `block` is only necessary if using
 *    `:before` to contain the top-margins of child elements.
 */

.clearfix:before,
.clearfix:after {
    content: " ";
    /* 1 */
    display: table;
    /* 2 */
}

.clearfix:after {
    clear: both;
}


/* ==========================================================================
   EXAMPLE Media Queries for Responsive Design.
   These examples override the primary ('mobile first') styles.
   Modify as content requires.
   ========================================================================== */

@media only screen and (min-width: 35em) {
    /* Style adjustments for viewports that meet the condition */
}

@media print,
(-webkit-min-device-pixel-ratio: 1.25),
(min-resolution: 1.25dppx),
(min-resolution: 120dpi) {
    /* Style adjustments for high resolution devices */
}


/* ==========================================================================
   Print styles.
   Inlined to avoid the additional HTTP request:
   http://www.phpied.com/delay-loading-your-print-css/
   ========================================================================== */

@media print {
    *,
    *:before,
    *:after {
        background: transparent !important;
        color: #000 !important;
        /* Black prints faster:
                                   http://www.sanbeiji.com/archives/953 */
        -webkit-box-shadow: none !important;
        box-shadow: none !important;
        text-shadow: none !important;
    }
    a,
    a:visited {
        text-decoration: underline;
    }
    a[href]:after {
        content: " (" attr(href) ")";
    }
    abbr[title]:after {
        content: " (" attr(title) ")";
    }
    /*
     * Don't show links that are fragment identifiers,
     * or use the `javascript:` pseudo protocol
     */
    a[href^="#"]:after,
    a[href^="javascript:"]:after {
        content: "";
    }
    pre {
        white-space: pre-wrap !important;
    }
    pre,
    blockquote {
        border: 1px solid #999;
        page-break-inside: avoid;
    }
    /*
     * Printing Tables:
     * http://css-discuss.incutio.com/wiki/Printing_Tables
     */
    thead {
        display: table-header-group;
    }
    tr,
    img {
        page-break-inside: avoid;
    }
    p,
    h2,
    h3 {
        orphans: 3;
        widows: 3;
    }
    h2,
    h3 {
        page-break-after: avoid;
    }
}