/*
 *  ***************************************************
 *  SIMPLE.SASS
 *  ***************************************************
 *  Simple SASS Boilerplate based on HTML5 Boilerplate
 *  ***************************************************

 *  MIXINS FILE
*/

/* Links and Buttons */
/* ============================================== */

@mixin button() {

    display: inline-block;
    background: $gray-dark;
    color: $white;
    text-transform: uppercase;
    line-height: 1em;
    padding: $padding/4 $padding/2;
    font-size: 1em;
    font-weight: 700;
    border: $border_default_width $border_default_style;
    outline-style: solid;
    outline-width: 0px;
    cursor: pointer;
    margin-bottom: 3px;

    @include transition(all,0.2s,ease);

    &:hover {
        color: $white;
        background: rgba($gray-dark,0.8);
    }
    &.small {
        font-size: 1em;
        height: 30px;
        line-height: 30px;
    }
    &.disabled {
        pointer-events: none;
        opacity: 0.5;
    }

}

@mixin button-color($background,$color,$border_color) {
    color: $color;
    background: $background;
    @if $border_color != false {
        border-color: $border_color;
    }
    @else {
        border-color: darken($background,15);
    }
    &:hover {
        color: $color;
        background: rgba($background,0.8);
    }
}


/*
    Icon Button
    ------------------
    This mixin show an icon at right or left of the button
    Remember that this mixin require an icon font such as FontAwesome
*/

@mixin button-icon($icon) {
    @include button;
    margin-top: $margin/2;
    padding: 0 $padding/4 0 ($padding + 10);
    position: relative;
    &::before,
    &::after {
        content: $icon;
        font-family: $font-icon-1;
        font-size: 2em;
        font-weight: 300;
        display: block;
        width: 40px;
        height: 40px;
        text-align: center;
        line-height: 40px;
        background: rgba($black,0.2);
        margin-right: $margin/4;
        position: absolute;
        left: 0;
        right: auto;
        top: 0;
        bottom: 0;
    }
    &::after {
        display: none;
    }
    &.icon-on-right {
        @include button-icon-right();
    }
}

@mixin button-icon-left() {
    padding: 0 $padding/4 0 ($padding + 10);
    &::before {
        margin-right: $margin/4;
        left: 0;
        right: auto;
    }
    &::after {
        display: none;
    }
}

@mixin button-icon-right() {
    padding: 0 ($padding + 10) 0 $padding/4;
    &::before {
        display: none;
    }
    &::after {
        display: block;
        margin-left: $margin/4;
        margin-right: 0;
        left: auto;
        right: 0;
    }
}

@mixin box($pad) {
    @if $pad == true {
        padding: $padding/2;
    }
}

@mixin box-color($background,$color,$border) {
    background-color: $background;
    color: $color;
    border-width: $border_default_width;
    border-style: $border_default_style;
    @if $border != false {
        border-color: $border;
    }
    @else {
        border-color: darken($background,15);
    }
}

// #######################################################################

// Lists //

/*
    **********************
    * This mixin reset the default browser stile for lists
    * This mixin is thinked for unordered lists
    *
    * ARGUMENT $reset_spaces (default is true)
    * is a bool value for reset the spaces (margin and padding) around the list
    **********************
*/

@mixin resetlist($reset_spaces: true) {
    margin: 0;
    padding: 0;
    list-style-type: none;
}

// #######################################################################

// Title Sizes //

/*
    **********************
    * This mixin set a responsive font scaling thinked for H tags
    * This mixin is based on breakpoints array defined in variables.scss
    *
    * ARGUMENT $base_font_size (default is 1em)
    * is the value for the smallest font size defined for smartphone view
    **********************
*/
@mixin h_title_size($base_font_size: 1em) {

    font-size: $base_font_size;

    $bps: $bps_list; // $bps_list is in variables.scss
    $font-size: $base_font_size;

    @each $bp in $bps {
        $font-size: $font-size + 0.2;
        @media all and (min-width: #{$bp}) {
            font-size: $font-size;
        }
    }

}

// Titles Style //
// ********************** //
@mixin h_title_style($h_map, $h_small_map) {
    font-family: map-get($h_map, "font");
    font-weight: map-get($h_map, "weight");
    color: map-get($h_map, "color");
    padding: map-get($h_map, "padding");
    margin: map-get($h_map, "margin");
    small {
        color: map-get($h_small_map, "font");
        font-size: map-get($h_small_map, "font");
    }
}

@mixin message_box() {
    padding: $padding/4;
    border-radius: $border_radius;
    h1,h2,h3,h4,h5,h6,p {
        margin: 0;
    }
}

@mixin message_box_color($base_color) {
    color: $white;
    background-color: $base_color;
    border: 1px solid darken($base_color, 10%);
}

// Ellipsis //
// ********************** //
@mixin ellipsis {
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
}

// Placeholder //
// ********************** //
@mixin placeholder($color,$size,$weight) {
    &::-webkit-input-placeholder {color:$color; font-size: $size; font-weight: $weight;}
    &::-moz-placeholder {color:$color; font-size: $size; font-weight: $weight;}
    &:-ms-input-placeholder {color:$color; font-size: $size; font-weight: $weight;}
}

// Screen Reader Only //
// ********************** //
@mixin sr_only() {
    border: 0;
    clip: rect(0 0 0 0);
    height: 1px;
    margin: -1px;
    overflow: hidden;
    padding: 0;
    position: absolute;
    width: 1px;
}


// Position //
// ********************** //
@mixin place($top,$right,$bottom,$left) {
    top:$top;
    right: $right;
    bottom: $bottom;
    left: $left;
}

// Size
// ********************** //
@mixin size($width, $height) {
    width: $width;
    height: $height;
}

// Border //
// ********************** //
@mixin border($size, $style, $col) {
    border-width: $size;
    border-style: $style;
    border-color: $col;
}


// BoxSizing //
// ********************** //
@mixin boxsizing($property) {
  -webkit-box-sizing: $property;
     -moz-box-sizing: $property;
          box-sizing: $property;
}

// Clearfix
// ********************** //
@mixin clearfix {
    &:before,
    &:after {
        content: "";
        display: table;
    }
    &:after {
        clear: both;
    }
    *zoom: 1;
}

//@mixin cfix


/* TRANSITIONS */
/* ============================================== */
@mixin transition ( $property, $duration, $style) {
    transition-property: $property;
    transition-duration: $duration;
    transition-timing-function: $style;
}


@mixin easeInQuad($duration) {
    transition: all $duration cubic-bezier(0.550, 0.085, 0.680, 0.530); /* easeInQuad */
    transition-timing-function: cubic-bezier(0.550, 0.085, 0.680, 0.530); /* easeInQuad */
}

@mixin easeInCubic($duration) {
    transition: all $duration cubic-bezier(0.550, 0.055, 0.675, 0.190); /* easeInCubic */
    transition-timing-function: cubic-bezier(0.550, 0.055, 0.675, 0.190); /* easeInCubic */
}

@mixin easeInQuart($duration) {
    transition: all $duration cubic-bezier(0.895, 0.030, 0.685, 0.220); /* easeInQuart */
    transition-timing-function: cubic-bezier(0.895, 0.030, 0.685, 0.220); /* easeInQuart */
}

@mixin easeInQuint($duration) {
    transition: all $duration cubic-bezier(0.755, 0.050, 0.855, 0.060); /* easeInQuint */
    transition-timing-function: cubic-bezier(0.755, 0.050, 0.855, 0.060); /* easeInQuint */
}

@mixin easeInSine($duration) {
    transition: all $duration cubic-bezier(0.470, 0.000, 0.745, 0.715); /* easeInSine */
    transition-timing-function: cubic-bezier(0.470, 0.000, 0.745, 0.715); /* easeInSine */
}

@mixin easeInExpo($duration) {
    transition: all $duration cubic-bezier(0.950, 0.050, 0.795, 0.035); /* easeInExpo */
    transition-timing-function: cubic-bezier(0.950, 0.050, 0.795, 0.035); /* easeInExpo */
}

@mixin easeInCirc($duration) {
    transition: all $duration cubic-bezier(0.600, 0.040, 0.980, 0.335); /* easeInCirc */
    transition-timing-function: cubic-bezier(0.600, 0.040, 0.980, 0.335); /* easeInCirc */
}

@mixin easeInBack($duration) {
    transition: all $duration cubic-bezier(0.600, -0.280, 0.735, 0.045); /* easeInBack */
    transition-timing-function: cubic-bezier(0.600, -0.280, 0.735, 0.045); /* easeInBack */
}

@mixin easeOutQuad($duration) {
    transition: all $duration cubic-bezier(0.250, 0.460, 0.450, 0.940); /* easeOutQuad */
    transition-timing-function: cubic-bezier(0.250, 0.460, 0.450, 0.940); /* easeOutQuad */
}

@mixin easeOutCubic($duration) {
    transition: all $duration cubic-bezier(0.215, 0.610, 0.355, 1.000); /* easeOutCubic */
    transition-timing-function: cubic-bezier(0.215, 0.610, 0.355, 1.000); /* easeOutCubic */
}

@mixin easeOutQuart($duration) {
    transition: all $duration cubic-bezier(0.165, 0.840, 0.440, 1.000); /* easeOutQuart */
    transition-timing-function: cubic-bezier(0.165, 0.840, 0.440, 1.000); /* easeOutQuart */
}

@mixin easeOutQuint($duration) {
    transition: all $duration cubic-bezier(0.230, 1.000, 0.320, 1.000); /* easeOutQuint */
    transition-timing-function: cubic-bezier(0.230, 1.000, 0.320, 1.000); /* easeOutQuint */
}

@mixin easeOutSine($duration) {
    transition: all $duration cubic-bezier(0.390, 0.575, 0.565, 1.000); /* easeOutSine */
    transition-timing-function: cubic-bezier(0.390, 0.575, 0.565, 1.000); /* easeOutSine */
}

@mixin easeOutExpo($duration) {
    transition: all $duration cubic-bezier(0.190, 1.000, 0.220, 1.000); /* easeOutExpo */
    transition-timing-function: cubic-bezier(0.190, 1.000, 0.220, 1.000); /* easeOutExpo */
}

@mixin easeOutCirc($duration) {
    transition: all $duration cubic-bezier(0.075, 0.820, 0.165, 1.000); /* easeOutCirc */
    transition-timing-function: cubic-bezier(0.075, 0.820, 0.165, 1.000); /* easeOutCirc */
}

@mixin easeOutBack($duration) {
    transition: all $duration cubic-bezier(0.175, 0.885, 0.320, 1.275); /* easeOutBack */
    transition-timing-function: cubic-bezier(0.175, 0.885, 0.320, 1.275); /* easeOutBack */
}

@mixin easeInOutQuad($duration) {
    transition: all $duration cubic-bezier(0.455, 0.030, 0.515, 0.955); /* easeInOutQuad */
    transition-timing-function: cubic-bezier(0.455, 0.030, 0.515, 0.955); /* easeInOutQuad */
}

@mixin easeInOutCubic($duration) {
    transition: all $duration cubic-bezier(0.645, 0.045, 0.355, 1.000); /* easeInOutCubic */
    transition-timing-function: cubic-bezier(0.645, 0.045, 0.355, 1.000); /* easeInOutCubic */
}

@mixin easeInOutQuart($duration) {
    transition: all $duration cubic-bezier(0.770, 0.000, 0.175, 1.000); /* easeInOutQuart */
    transition-timing-function: cubic-bezier(0.770, 0.000, 0.175, 1.000); /* easeInOutQuart */
}

@mixin easeInOutQuint($duration) {
    transition: all $duration cubic-bezier(0.860, 0.000, 0.070, 1.000); /* easeInOutQuint */
    transition-timing-function: cubic-bezier(0.860, 0.000, 0.070, 1.000); /* easeInOutQuint */
}

@mixin easeInOutSine($duration) {
    transition: all $duration cubic-bezier(0.445, 0.050, 0.550, 0.950); /* easeInOutSine */
    transition-timing-function: cubic-bezier(0.445, 0.050, 0.550, 0.950); /* easeInOutSine */
}

@mixin easeInOutExpo($duration) {
    transition: all $duration cubic-bezier(1.000, 0.000, 0.000, 1.000); /* easeInOutExpo */
    transition-timing-function: cubic-bezier(1.000, 0.000, 0.000, 1.000); /* easeInOutExpo */
}

@mixin easeInOutCirc($duration) {
    transition: all $duration cubic-bezier(0.785, 0.135, 0.150, 0.860);
    transition-timing-function: cubic-bezier(0.785, 0.135, 0.150, 0.860);
}

@mixin easeInOutBack($duration) {
    transition: all $duration cubic-bezier(0.680, -0.550, 0.265, 1.550);
    transition-timing-function: cubic-bezier(0.680, -0.550, 0.265, 1.550);
}



// Transforms //
// ********************** //
@mixin transform ( $transformProperties ) {
    transform: $transformProperties;
}

// Transforms > Translate //
// ********************** //
@mixin translate ( $x, $y ) {
    transform: translate($x,$y);
}

@mixin translate-50Y {
    transform: translateY(-50%);
}

@mixin translate-50X {
    transform: translateX(-50%);
}

@mixin translate-50 {
    transform: translate(-50%,-50%);
}



// Ratio Mixin
// ********************** //
@mixin ratio_16-9 {
    position: relative;
    &:before {
        content: "";
        display: block;
        padding-top: 56.25%;
    }
}

@mixin ratio_4-3{
    position: relative;
    &:before {
        content: "";
        display: block;
        padding-top: 75%;
    }
}

@mixin ratio_8-5 {
    position: relative;
    &:before {
        content: "";
        display: block;
        padding-top: 62.5%;
    }
}

@mixin ratio_3-2 {
    position: relative;
    &:before {
        content: "";
        display: block;
        padding-top: 66%;
    }
}

@mixin ratio_1-2 {
    position: relative;
    &:before {
        content: "";
        display: block;
        padding-top: 50%;
    }
}

@mixin ratio_1-1 {
    position: relative;
    &:before {
        content: "";
        display: block;
        padding-top: 100%;
    }
}

@mixin ratio_custom($padding) {
    position: relative;
    &:before {
        content: "";
        display: block;
        padding-top: $padding;
    }
}

@mixin ratio_content {
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
}